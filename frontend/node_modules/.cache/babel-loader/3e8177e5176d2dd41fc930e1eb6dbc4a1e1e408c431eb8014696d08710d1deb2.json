{"ast":null,"code":"var _jsxFileName = \"/Users/jianpeng/Desktop/PDFExtract/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport UploadComponent from \"./components/UploadComponent\";\nimport PdfViewerComponent from \"./components/PdfViewerComponent\";\nimport ReactJson from \"react-json-view\"; // Importing react-json-view\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [jsonSchema, setJsonSchema] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pdfFile, setPdfFile] = useState(null);\n\n  // Handle the file upload\n  const onDrop = async acceptedFiles => {\n    if (acceptedFiles.length === 0) return;\n    setIsLoading(true);\n    setPdfFile(acceptedFiles[0]); // Set the uploaded PDF file for visualization\n\n    const formData = new FormData();\n    formData.append(\"pdf\", acceptedFiles[0]);\n    try {\n      const response = await axios.post(\"http://localhost:5001/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n\n      // Update the state with the received JSON schema\n      if (response.data && response.data.schema) {\n        setJsonSchema(response.data.schema);\n      }\n    } catch (error) {\n      console.error(\"Error uploading PDF:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Function to download the JSON schema\n  const downloadJson = () => {\n    if (!jsonSchema) return;\n\n    // Create a Blob with the JSON data\n    const jsonString = JSON.stringify(jsonSchema, null, 2); // Pretty print JSON\n    const blob = new Blob([jsonString], {\n      type: \"application/json\"\n    });\n\n    // Create an anchor element and trigger a download\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"generated_schema.json\"; // The filename for the downloaded file\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Handle changes to the JSON in the ReactJson component\n  const handleJsonEdit = edit => {\n    setJsonSchema(edit.updated_src); // Update the state with the edited JSON\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: '10px',\n        borderRight: '1px solid #ccc'\n      },\n      children: [/*#__PURE__*/_jsxDEV(UploadComponent, {\n        onDrop: onDrop,\n        isLoading: isLoading,\n        pdfFile: pdfFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), jsonSchema && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadJson,\n        style: {\n          marginTop: \"10px\",\n          padding: \"10px\",\n          backgroundColor: \"#28a745\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          alignSelf: \"start\"\n        },\n        children: \"Download JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), pdfFile && /*#__PURE__*/_jsxDEV(PdfViewerComponent, {\n        pdfFile: pdfFile,\n        style: {\n          marginTop: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 2,\n        overflow: 'auto',\n        padding: '20px'\n      },\n      children: jsonSchema && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"#ffffff\"\n          },\n          children: \"Editable JSON Schema:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ReactJson, {\n          src: jsonSchema,\n          onEdit: handleJsonEdit,\n          onAdd: handleJsonEdit,\n          onDelete: handleJsonEdit,\n          theme: \"monokai\" // Dark theme with colored syntax\n          ,\n          style: {\n            backgroundColor: \"#2b2b2b\",\n            padding: \"15px\",\n            borderRadius: \"5px\",\n            maxHeight: \"80vh\",\n            overflow: \"auto\"\n          },\n          displayDataTypes: false,\n          displayObjectSize: false,\n          enableClipboard: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ZZjjJHaT3pZJaG+9BeLAbinAsZ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","UploadComponent","PdfViewerComponent","ReactJson","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","jsonSchema","setJsonSchema","isLoading","setIsLoading","pdfFile","setPdfFile","onDrop","acceptedFiles","length","formData","FormData","append","response","post","headers","data","schema","error","console","downloadJson","jsonString","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","handleJsonEdit","edit","updated_src","style","display","height","children","flex","flexDirection","padding","borderRight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","backgroundColor","color","border","borderRadius","cursor","alignSelf","overflow","src","onEdit","onAdd","onDelete","theme","maxHeight","displayDataTypes","displayObjectSize","enableClipboard","_c","$RefreshReg$"],"sources":["/Users/jianpeng/Desktop/PDFExtract/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport UploadComponent from \"./components/UploadComponent\";\nimport PdfViewerComponent from \"./components/PdfViewerComponent\";\nimport ReactJson from \"react-json-view\"; // Importing react-json-view\n\nfunction App() {\n    const [jsonSchema, setJsonSchema] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [pdfFile, setPdfFile] = useState(null);\n\n    // Handle the file upload\n    const onDrop = async (acceptedFiles) => {\n        if (acceptedFiles.length === 0) return;\n\n        setIsLoading(true);\n        setPdfFile(acceptedFiles[0]); // Set the uploaded PDF file for visualization\n\n        const formData = new FormData();\n        formData.append(\"pdf\", acceptedFiles[0]);\n\n        try {\n            const response = await axios.post(\"http://localhost:5001/upload\", formData, {\n                headers: {\n                    \"Content-Type\": \"multipart/form-data\",\n                },\n            });\n\n            // Update the state with the received JSON schema\n            if (response.data && response.data.schema) {\n                setJsonSchema(response.data.schema);\n            }\n        } catch (error) {\n            console.error(\"Error uploading PDF:\", error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // Function to download the JSON schema\n    const downloadJson = () => {\n        if (!jsonSchema) return;\n\n        // Create a Blob with the JSON data\n        const jsonString = JSON.stringify(jsonSchema, null, 2); // Pretty print JSON\n        const blob = new Blob([jsonString], { type: \"application/json\" });\n\n        // Create an anchor element and trigger a download\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.download = \"generated_schema.json\"; // The filename for the downloaded file\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    // Handle changes to the JSON in the ReactJson component\n    const handleJsonEdit = (edit) => {\n        setJsonSchema(edit.updated_src); // Update the state with the edited JSON\n    };\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            {/* Left Side - Upload PDF & PDF Viewer */}\n            <div style={{ flex: 1, display: \"flex\", flexDirection: \"column\", padding: '10px', borderRight: '1px solid #ccc' }}>\n                {/* Upload Component */}\n                <UploadComponent onDrop={onDrop} isLoading={isLoading} pdfFile={pdfFile} />\n\n                {/* Download Button */}\n                {jsonSchema && (\n                    <button\n                        onClick={downloadJson}\n                        style={{\n                            marginTop: \"10px\",\n                            padding: \"10px\",\n                            backgroundColor: \"#28a745\",\n                            color: \"#fff\",\n                            border: \"none\",\n                            borderRadius: \"4px\",\n                            cursor: \"pointer\",\n                            alignSelf: \"start\",\n                        }}\n                    >\n                        Download JSON\n                    </button>\n                )}\n\n                {/* PDF Viewer */}\n                {pdfFile && <PdfViewerComponent pdfFile={pdfFile} style={{ marginTop: \"20px\" }} />}\n            </div>\n\n            {/* Right Side - JSON Schema Display and Editing with ReactJson */}\n            <div style={{ flex: 2, overflow: 'auto', padding: '20px' }}>\n                {jsonSchema && (\n                    <>\n                        <h3 style={{ color: \"#ffffff\" }}>Editable JSON Schema:</h3>\n                        <ReactJson\n                            src={jsonSchema}\n                            onEdit={handleJsonEdit}\n                            onAdd={handleJsonEdit}\n                            onDelete={handleJsonEdit}\n                            theme=\"monokai\" // Dark theme with colored syntax\n                            style={{\n                                backgroundColor: \"#2b2b2b\",\n                                padding: \"15px\",\n                                borderRadius: \"5px\",\n                                maxHeight: \"80vh\",\n                                overflow: \"auto\",\n                            }}\n                            displayDataTypes={false}\n                            displayObjectSize={false}\n                            enableClipboard={false}\n                        />\n                    </>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}